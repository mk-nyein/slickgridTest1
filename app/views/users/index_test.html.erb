<p id="notice"><%= notice %></p>


  <!-- For the slickgrid  -->
<div id="myGrid"  style="width:800px;height:300px;">
</div>

<script>
    // Create the Slickgrid holder
    var grid;
    // // Create the DataView.
    // var dataView = new Slick.Data.DataView();

    // Create the columns name for slickgrid table
    var columns = [
      {id: 'name', name: 'Name', field: 'name'},
      {id: 'phone', name: 'Phone', field: 'phone'},
      {id: 'address', name: 'Address', field: 'address'},
      {
        name: "Action",
        field: "link",
        id: "link",
        sortable: false,
        width: 250,
        formatter: linkFormatter = function ( row, cell, value, columnDef, dataContext ) {
            // return '<button type="input" onclick="alert('+ value + ')">' + value + '</button>';
            return '<a href="/users/' + value + '">Show</a> <a href="/users/' + value + '/edit">Edit</a> <a href="/users/' + value + '" data-confirm="Are you sure?" data-method="delete" >Delete</a>';
            // return "alert(dataContext['id'])";
        }
      }
    ];

    // Create the option for slickgrid
    var options = {
      enableCellNavigation: true,
      enableColumnReorder: false
    };

    // Create for the data to be added to the slickgrid table
    // var data = [];
    // var i = 0;
</script>
<!-- 
<% @users.each do |user| %>
  <script >
      data[i] = {
        link: <%= user.id %>,
        name: '<%= user.name %>',
        phone: "PHONE" + <%= user.id %>,
        address: "01/01/2009"
      };
      i++;

      // Pass it as a data provider to SlickGrid.
      grid = new Slick.Grid("#myGrid", data, columns, options);

      // //append items
      //   grid.invalidateRow();
      //   grid.updateRowCount();
      //   grid.render();
  </script>
<% end %> -->
<!-- For the slickgrid end -->


  <script >
      data = <%= @users.to_json.html_safe %>;
      // // Pass it as a data provider to SlickGrid.
      grid = new Slick.Grid("#myGrid", data, columns, options);

      // jQuery(function() {

      //   // # getJSON is a jQuery convenience function for doing an AJAX call
      //   // # that fetches some JSON data.
      //   jQuery.getJSON('http://example.com/users', function(data) {
      //     grid = new Slick.Grid("#myGrid", data, columns, options);
      //     $("#slickGrid").show();
      //   });

      // });

  </script>




<!-- For sorting not done yet -->
<!-- <div id="container">
</div> -->
  <script>
    // var grid,
    //     data = [],
    //     columns = [
    //       { id: "title", name: "Title", field: "title", width: 240, sortable: true },
    //       { id: "c1", name: "Sort 1", field: "c1", width: 240, sortable: true },
    //       { id: "c2", name: "Sort 2", field: "c2", width: 240, sortable: true },
    //       { id: "c3", name: "Sort 3", field: "c3", width: 240, sortable: true }
    //     ],
    //     options = {
    //       enableCellNavigation: false,
    //       enableColumnReorder: false
    //     },
    //     numberOfItems = 10, items = [], indices, isAsc = true, currentSortCol = { id: "title" }, i;

    // // Copies and shuffles the specified array and returns a new shuffled array.
    // function randomize(items) {
    //   var randomItems = $.extend(true, null, items), randomIndex, temp, index;
    //   for (index = items.length; index-- > 0;) {
    //     randomIndex = Math.round(Math.random() * items.length - 1);
    //     if (randomIndex > -1) {
    //       temp = randomItems[randomIndex];
    //       randomItems[randomIndex] = randomItems[index];
    //       randomItems[index] = temp;
    //     }
    //   }
    //   alert(randomItems[randomIndex]);
    //   return randomItems;
    // }

    // /// Build the items and indices.
    // for (i = numberOfItems; i-- > 0;) {
    //   items[i] = i;
    //   data[i] = {
    //     title: "Task ".concat(i + 1)
    //   };
    // }
    // indices = { title: items, c1: randomize(items), c2: randomize(items), c3: randomize(items) };

    // // Assign values to the data.
    // for (i = numberOfItems; i-- > 0;) {
    //   data[indices.c1[i]].c1 = "Value ".concat(i + 1);
    //   data[indices.c2[i]].c2 = "Value ".concat(i + 1);
    //   data[indices.c3[i]].c3 = "Value ".concat(Math.random());
    // }

    // // Define function used to get the data and sort it.
    // function getItem(index) {
    //   return isAsc ? data[indices[currentSortCol.id][index]] : data[indices[currentSortCol.id][(data.length - 1) - index]];
    // }
    // function getLength() {
    //   return data.length;
    // }

    // grid = new Slick.Grid("#container", {getLength: getLength, getItem: getItem}, columns, options);
    // grid.onSort.subscribe(function (e, args) {
    //   currentSortCol = args.sortCol;
    //   isAsc = args.sortAsc;
    //   grid.invalidateAllRows();
    //   grid.render();
    // });
  </script>
<!-- For sorting not done yet -->

<%= link_to 'New User', new_user_path %>

</div>






